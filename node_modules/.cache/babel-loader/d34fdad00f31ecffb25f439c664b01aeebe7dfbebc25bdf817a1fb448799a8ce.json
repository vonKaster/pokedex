{"ast":null,"code":"import store from \"@/store/index.js\";\nimport axios from \"axios\";\nimport { mapState, mapActions, mapGetters } from \"vuex\";\nexport default {\n  name: \"Pokedex\",\n  data() {\n    return {\n      OpenButtonDisabled: false,\n      timeout: null,\n      OpenButtonInfo: \"Abrir\",\n      hasSaved: true,\n      hasSelled: true,\n      counter: \"5\",\n      hasPokemons: false,\n      pokemon: {\n        id: \"1\",\n        name: \"¡Abre una pokebola!\",\n        img: \"https://www.pngitem.com/pimgs/m/580-5807856_pokemon-pokeball-pokeball-transparent-background-hd-png-download.png\"\n      }\n    };\n  },\n  computed: {\n    ...mapState({\n      timer: state => state.timer,\n      pokemonsOwned: state => state.pokemonsOwned,\n      coins: state => state.coins\n    })\n  },\n  methods: {\n    ...mapActions(['setTimer']),\n    startTimer() {\n      this.OpenButtonDisabled = true;\n      let countdown = setInterval(() => {\n        this.setTimer(this.timer - 1);\n        this.OpenButtonInfo = this.timer;\n        console.log(this.timer);\n        if (this.OpenButtonInfo === 0) {\n          clearInterval(countdown);\n          this.setTimer(30);\n          this.OpenButtonDisabled = false;\n          this.OpenButtonInfo = \"Abrir\";\n        }\n      }, 1000);\n      this.$once(\"hook:beforeDestroy\", () => {\n        clearInterval(countdown);\n        console.log(\"beforeDestroy\");\n      });\n    },\n    obtenerPokemon(id) {\n      axios.get(`https://pokeapi.co/api/v2/pokemon/${id}`).then(response => {\n        console.log(response);\n        this.pokemon.img = response.data.sprites.front_default;\n        this.pokemon.name = response.data.name;\n        this.pokemon.id = response.data.id;\n        this.saveLastPokemonRolled();\n        this.hasSaved = false;\n        this.hasSelled = false;\n      }).catch(error => {\n        this.pokemon.name = \"No existe\";\n      });\n    },\n    getRandomInt() {\n      return Math.floor(Math.random() * 906);\n    },\n    async savePokemon() {\n      await this.$store.dispatch(\"addPokemon\", {\n        id: this.pokemon.id,\n        name: this.pokemon.name,\n        img: this.pokemon.img\n      });\n      this.hasSaved = true;\n      console.log(this.pokemonsOwned);\n    },\n    async sellPokemonNotOwned() {\n      this.$store.dispatch(\"removePokemon\", this.pokemon.id);\n      this.incrementCoins(20);\n      this.hasSelled = true;\n    },\n    incrementCoins(amount) {\n      store.commit(\"incrementCoins\", amount);\n    },\n    saveLastPokemonRolled() {\n      store.commit(\"updateLastPokemonRolled\", {\n        id: this.pokemon.id,\n        name: this.pokemon.name,\n        img: this.pokemon.img\n      });\n    }\n  },\n  mounted() {\n    if (this.timer <= 29) {\n      this.startTimer();\n    }\n    let ls = JSON.parse(localStorage.getItem(\"lastPokemon\"));\n    if (ls === null || ls === undefined) {\n      let pokemon = {\n        id: 1,\n        name: \"¡Abre una pokebola!\",\n        img: \"https://www.pngitem.com/pimgs/m/580-5807856_pokemon-pokeball-pokeball-transparent-background-hd-png-download.png\"\n      };\n      localStorage.setItem(\"lastPokemon\", JSON.stringify(pokemon));\n    } else {\n      this.pokemon.id = ls.id;\n      this.pokemon.name = ls.name;\n      this.pokemon.img = ls.img;\n    }\n  }\n};","map":{"version":3,"mappings":"AA+CA;AACA;AACA;AACA;EACAA;EAEAC;IACA;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;QACAC;QACAV;QACAW;MACA;IACA;EACA;EAEAC;IACA;MACAC;MACAC;MACAC;IACA;EACA;EAEAC;IACA;IAEAC;MACA;MACA;QACA;QACA;QACAC;QACA;UACAC;UACA;UACA;UACA;QACA;MACA;MAEA;QACAA;QACAD;MACA;IACA;IAEAE;MACAC,MACAC,+CACAC;QACAL;QACA;QACA;QACA;QACA;QACA;QACA;MACA,GACAM;QACA;MACA;IACA;IACAC;MACA;IACA;IACA;MACA;QACAf;QACAV;QACAW;MACA;MACA;MACAO;IACA;IACA;MACA;MACA;MACA;IACA;IACAQ;MACAC;IACA;IACAC;MACAD;QACAjB;QACAV;QACAW;MACA;IACA;EACA;EAEAkB;IACA;MACA;IACA;IAEA;IAEA;MACA;QACAnB;QACAV;QACAW;MACA;MACAmB;IACA;MACA;MACA;MACA;IACA;EAEA;AAEA","names":["name","data","OpenButtonDisabled","timeout","OpenButtonInfo","hasSaved","hasSelled","counter","hasPokemons","pokemon","id","img","computed","timer","pokemonsOwned","coins","methods","startTimer","console","clearInterval","obtenerPokemon","axios","get","then","catch","getRandomInt","incrementCoins","store","saveLastPokemonRolled","mounted","localStorage"],"sourceRoot":"src/components","sources":["Pokedex.vue"],"sourcesContent":["<template>\n  <div class=\"container text-center\">\n    <v-card class=\"mx-auto\" max-width=\"300px\">\n      <v-img text-center max-width=\"300\" class=\"\" :src=\"pokemon.img\"> </v-img>\n\n      <div>\n        <v-card-title>{{ pokemon.name.toUpperCase() }}</v-card-title>\n        <v-card-text class=\"pb-0 text-left\"\n          >Número: {{ pokemon.id }}\n        </v-card-text>\n\n        <v-card-actions>\n          <v-btn\n            :disabled=\"hasSaved === true || hasSelled === true\"\n            color=\"green\"\n            @click=\"\n              savePokemon();\n            \"\n            text\n          >\n            Guardar\n          </v-btn>\n          <v-btn\n            color=\"red\"\n            text\n            :disabled=\"hasSelled === true\"\n            @click=\"sellPokemonNotOwned()\"\n          >\n            Vender\n          </v-btn>\n        </v-card-actions>\n      </div>\n    </v-card>\n    <v-btn\n      :disabled=\"OpenButtonDisabled\"\n      @click=\"\n        obtenerPokemon(getRandomInt());\n        startTimer();\n      \"\n      class=\"mt-4\"\n      \n      >{{ OpenButtonInfo }}</v-btn\n    >\n  </div>\n</template>\n\n<script>\nimport store from \"@/store/index.js\";\nimport axios from \"axios\";\nimport { mapState, mapActions, mapGetters } from \"vuex\";\nexport default {\n  name: \"Pokedex\",\n\n  data() {\n    return {\n      OpenButtonDisabled: false,\n      timeout: null,\n      OpenButtonInfo: \"Abrir\",\n      hasSaved: true,\n      hasSelled: true,\n      counter: \"5\",\n      hasPokemons: false,\n      pokemon: {\n        id: \"1\",\n        name: \"¡Abre una pokebola!\",\n        img: \"https://www.pngitem.com/pimgs/m/580-5807856_pokemon-pokeball-pokeball-transparent-background-hd-png-download.png\",\n      },\n    };\n  },\n\n  computed: {\n    ...mapState({\n      timer: state => state.timer,\n      pokemonsOwned: state => state.pokemonsOwned,\n      coins: state => state.coins\n    })\n  },\n\n  methods: {\n    ...mapActions(['setTimer']),\n\n    startTimer() {\n      this.OpenButtonDisabled = true;\n      let countdown = setInterval(() => {\n        this.setTimer(this.timer - 1)\n        this.OpenButtonInfo = this.timer;\n        console.log(this.timer);\n        if (this.OpenButtonInfo === 0) {\n          clearInterval(countdown);\n          this.setTimer(30);\n          this.OpenButtonDisabled = false;\n          this.OpenButtonInfo = \"Abrir\";\n        }\n      }, 1000)\n\n      this.$once(\"hook:beforeDestroy\", () => {\n        clearInterval(countdown);\n        console.log(\"beforeDestroy\");\n      });\n    },\n\n    obtenerPokemon(id) {\n      axios\n        .get(`https://pokeapi.co/api/v2/pokemon/${id}`)\n        .then((response) => {\n          console.log(response);\n          this.pokemon.img = response.data.sprites.front_default;\n          this.pokemon.name = response.data.name;\n          this.pokemon.id = response.data.id;\n          this.saveLastPokemonRolled()\n          this.hasSaved = false;\n          this.hasSelled = false;\n        })\n        .catch((error) => {\n          this.pokemon.name = \"No existe\";\n        });\n    },\n    getRandomInt() {\n      return Math.floor(Math.random() * 906);\n    },\n    async savePokemon() {\n      await this.$store.dispatch(\"addPokemon\", {\n        id: this.pokemon.id,\n        name: this.pokemon.name,\n        img: this.pokemon.img,\n      });\n      this.hasSaved = true;\n      console.log(this.pokemonsOwned);\n    },\n    async sellPokemonNotOwned() {\n      this.$store.dispatch(\"removePokemon\", this.pokemon.id);\n      this.incrementCoins(20);\n      this.hasSelled = true;\n    },\n    incrementCoins(amount) {\n      store.commit(\"incrementCoins\", amount);\n    },\n    saveLastPokemonRolled(){\n      store.commit(\"updateLastPokemonRolled\", {\n        id: this.pokemon.id,\n        name: this.pokemon.name,\n        img: this.pokemon.img,\n      });\n    }\n  },\n\n  mounted(){\n    if (this.timer <= 29){\n      this.startTimer();\n    }\n\n    let ls = JSON.parse(localStorage.getItem(\"lastPokemon\"));\n\n    if(ls === null || ls === undefined) {\n      let pokemon = {\n        id: 1,\n        name: \"¡Abre una pokebola!\",\n        img: \"https://www.pngitem.com/pimgs/m/580-5807856_pokemon-pokeball-pokeball-transparent-background-hd-png-download.png\"\n      }\n      localStorage.setItem(\"lastPokemon\", JSON.stringify(pokemon));\n    } else {\n      this.pokemon.id = ls.id;\n      this.pokemon.name = ls.name;\n      this.pokemon.img = ls.img;\n    }\n\n  },\n\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}