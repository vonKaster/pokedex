{"ast":null,"code":"import store from \"@/store/index.js\";\nimport { mapState } from \"vuex\";\nimport pokemonPage from \"./pokemonPage.vue\";\nexport default {\n  name: \"coleccion\",\n  components: {\n    pokemonPage\n  },\n  computed: {\n    ...mapState([\"pokemonsOwned\", \"coins\"])\n  },\n  data() {\n    return {\n      pokemon: {},\n      hasPokemons: false,\n      itemsPerPage: 1,\n      page: 1,\n      editedPokemonName: \"\",\n      name: \"\",\n      filteredPokemonsOwned: []\n    };\n  },\n  methods: {\n    incrementCoins(amount) {\n      store.commit(\"incrementCoins\", amount);\n    },\n    sellPokemonOwned(uid) {\n      this.$store.dispatch(\"removePokemon\", uid);\n      this.incrementCoins(20);\n    },\n    updatePokemonName(uid, name) {\n      if (name !== null) {\n        let pokemon = this.pokemonsOwned.find(pokemon => pokemon.uid === uid);\n        pokemon.name = name;\n        store.dispatch(\"editPokemon\", {\n          uid,\n          name\n        });\n      }\n    },\n    filterPokemons(name) {\n      if (!name) {\n        this.filteredPokemonsOwned = this.pokemonsOwned;\n        return;\n      }\n      this.filteredPokemonsOwned = this.pokemonsOwned.filter(pokemon => pokemon.name.toLowerCase().includes(name.toLowerCase()));\n    }\n  },\n  watch: {\n    search: function () {\n      this.filterPokemons();\n    }\n  },\n  created: function () {\n    let hasPokemons = JSON.parse(localStorage.getItem(\"pokemonsOwned\"));\n    if (hasPokemons === null) {\n      this.hasPokemons = false;\n    } else {\n      this.hasPokemons = true;\n    }\n  },\n  computed: {\n    ...mapState([\"pokemonsOwned\", \"coins\"]),\n    pages() {\n      return Math.ceil(this.pokemonsOwned.length / this.itemsPerPage);\n    },\n    paginatedPokemonsOwned() {\n      let start = (this.page - 1) * this.itemsPerPage;\n      let end = start + this.itemsPerPage;\n      return this.pokemonsOwned.slice(start, end);\n    },\n    paginatedPokemonsOwned() {\n      return this.filteredPokemonsOwned.slice(this.start, this.end);\n    }\n  }\n};","map":{"version":3,"mappings":"AAkDA;AACA;AACA;AACA;EACAA;EACAC;IACAC;EACA;EAEAC;IACA;EACA;EAEAC;IACA;MACAC;MACAC;MACAC;MACAC;MACAC;MACAT;MACAU;IACA;EACA;EACAC;IACAC;MACAC;IACA;IAEAC;MACA;MACA;IACA;IACAC;MACA;QACA;QACAV;QACAQ;UAAAG;UAAAhB;QAAA;MACA;IACA;IACAiB;MACA;QACA;QACA;MACA;MAEA,kEACAZ,wDACA;IACA;EACA;EAEAa;IACAC;MACA;IACA;EACA;EAEAC;IACA;IACA;MACA;IACA;MACA;IACA;EACA;EACAjB;IACA;IACAkB;MACA;IACA;IACAC;MACA;MACA;MACA;IACA;IACAA;MACA;IACA;EACA;AACA","names":["name","components","pokemonPage","computed","data","pokemon","hasPokemons","itemsPerPage","page","editedPokemonName","filteredPokemonsOwned","methods","incrementCoins","store","sellPokemonOwned","updatePokemonName","uid","filterPokemons","watch","search","created","pages","paginatedPokemonsOwned"],"sourceRoot":"src/components","sources":["MiColeccion.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <h1>\n      <div class=\"container\">\n        <h2 v-if=\"!hasPokemons\" class=\"text-center\">\n          Aún no tienes ningún pokemon\n        </h2>\n\n        <v-text-field\n          label=\"Buscar por nombre\"\n          v-model=\"name\"\n          @input=\"filterPokemons(name)\"\n        ></v-text-field>\n\n        <div class=\"d-flex flex-wrap\" v-if=\"hasPokemons\">\n          <v-card\n            v-for=\"(pokemon, index) in paginatedPokemonsOwned\"\n            :key=\"index\"\n            width=\"230px\"\n            class=\"ms-4 mb-4 .d-inline-block\"\n          >\n            <v-img text-center max-width=\"300\" :src=\"pokemon.img\"> </v-img>\n\n            <v-card-title\n              >{{ pokemon.name.toUpperCase() }}\n              <v-icon>mdi-pencil</v-icon>\n            </v-card-title>\n            <v-card-text class=\"ms-4\">ID: {{ pokemon.uid }}</v-card-text>\n            <v-card-text class=\"ms-4\"\n              >Tipo: {{ pokemon.type.toUpperCase() }}</v-card-text\n            >\n            <v-card-text class=\"ms-4\">Número: {{ pokemon.id }}</v-card-text>\n\n            <v-card-actions>\n              <router-link :to=\"`/pokemon/${pokemon.uid}`\">\n                <v-btn color=\"purple\" text> Perfil </v-btn>\n              </router-link>\n              <v-btn color=\"red\" text @click=\"sellPokemonOwned(pokemon.uid)\">\n                Vender\n              </v-btn>\n            </v-card-actions>\n          </v-card>\n        </div>\n        <v-pagination v-model=\"page\" :length=\"pages\"></v-pagination>\n      </div>\n    </h1>\n  </div>\n</template>\n\n<script>\nimport store from \"@/store/index.js\";\nimport { mapState } from \"vuex\";\nimport pokemonPage from \"./pokemonPage.vue\";\nexport default {\n  name: \"coleccion\",\n  components: {\n    pokemonPage,\n  },\n\n  computed: {\n    ...mapState([\"pokemonsOwned\", \"coins\"]),\n  },\n\n  data() {\n    return {\n      pokemon: {},\n      hasPokemons: false,\n      itemsPerPage: 1,\n      page: 1,\n      editedPokemonName: \"\",\n      name: \"\",\n      filteredPokemonsOwned: [],\n    };\n  },\n  methods: {\n    incrementCoins(amount) {\n      store.commit(\"incrementCoins\", amount);\n    },\n\n    sellPokemonOwned(uid) {\n      this.$store.dispatch(\"removePokemon\", uid);\n      this.incrementCoins(20);\n    },\n    updatePokemonName(uid, name) {\n      if (name !== null) {\n        let pokemon = this.pokemonsOwned.find((pokemon) => pokemon.uid === uid);\n        pokemon.name = name;\n        store.dispatch(\"editPokemon\", { uid, name });\n      }\n    },\n    filterPokemons(name) {\n      if (!name) {\n        this.filteredPokemonsOwned = this.pokemonsOwned;\n        return;\n      }\n\n      this.filteredPokemonsOwned = this.pokemonsOwned.filter((pokemon) =>\n        pokemon.name.toLowerCase().includes(name.toLowerCase())\n      );\n    },\n  },\n\n  watch: {\n    search: function () {\n      this.filterPokemons();\n    },\n  },\n\n  created: function () {\n    let hasPokemons = JSON.parse(localStorage.getItem(\"pokemonsOwned\"));\n    if (hasPokemons === null) {\n      this.hasPokemons = false;\n    } else {\n      this.hasPokemons = true;\n    }\n  },\n  computed: {\n    ...mapState([\"pokemonsOwned\", \"coins\"]),\n    pages() {\n      return Math.ceil(this.pokemonsOwned.length / this.itemsPerPage);\n    },\n    paginatedPokemonsOwned() {\n      let start = (this.page - 1) * this.itemsPerPage;\n      let end = start + this.itemsPerPage;\n      return this.pokemonsOwned.slice(start, end);\n    },\n    paginatedPokemonsOwned() {\n      return this.filteredPokemonsOwned.slice(this.start, this.end);\n    },\n  },\n};\n</script>\n\n<style>\n.v-text-field {\n  width: 150px;\n}\na {\n  text-decoration: none;\n  margin-bottom: 5px !important;\n}\n\n.v-btn {\n  padding: 0px 8px 0px 8px !important;\n}\n\n.v-input__slot {\n  padding: 0 !important;\n}\n\n.v-card__text {\n  padding: 0 !important;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}