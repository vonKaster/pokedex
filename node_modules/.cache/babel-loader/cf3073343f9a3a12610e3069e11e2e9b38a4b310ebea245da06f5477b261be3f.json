{"ast":null,"code":"import store from \"@/store/index.js\";\nimport { mapState } from \"vuex\";\nimport pokemonPage from \"./pokemonPage.vue\";\nexport default {\n  name: \"coleccion\",\n  components: {\n    pokemonPage\n  },\n  computed: {\n    ...mapState([\"pokemonsOwned\", \"coins\"])\n  },\n  data() {\n    return {\n      pokemon: {},\n      hasPokemons: false,\n      itemsPerPage: 14,\n      page: 1\n    };\n  },\n  methods: {\n    incrementCoins(amount) {\n      store.commit(\"incrementCoins\", amount);\n    },\n    sellPokemonOwned(id) {\n      this.$store.dispatch(\"removePokemon\", id);\n      this.incrementCoins(20);\n    }\n  },\n  created: function () {\n    let hasPokemons = JSON.parse(localStorage.getItem(\"pokemonsOwned\"));\n    if (hasPokemons === null) {\n      this.hasPokemons = false;\n    } else {\n      this.hasPokemons = true;\n    }\n  },\n  computed: {\n    ...mapState([\"pokemonsOwned\", \"coins\"]),\n    pages() {\n      return Math.ceil(this.pokemonsOwned.length / this.itemsPerPage);\n    },\n    paginatedPokemonsOwned() {\n      let start = (this.page - 1) * this.itemsPerPage;\n      let end = start + this.itemsPerPage;\n      return this.pokemonsOwned.slice(start, end);\n    }\n  }\n};","map":{"version":3,"mappings":"AAmDA;AACA;AACA;AACA;EACAA;EACAC;IACAC;EACA;EAEAC;IACA;EACA;EAEAC;IACA;MACAC;MACAC;MACAC;MACAC;IACA;EACA;EACAC;IACAC;MACAC;IACA;IAEAC;MACA;MACA;IACA;EACA;EACAC;IACA;IACA;MACA;IACA;MACA;IACA;EACA;EACAV;IACA;IACAW;MACA;IACA;IACAC;MACA;MACA;MACA;IACA;EACA;AACA","names":["name","components","pokemonPage","computed","data","pokemon","hasPokemons","itemsPerPage","page","methods","incrementCoins","store","sellPokemonOwned","created","pages","paginatedPokemonsOwned"],"sourceRoot":"src/components","sources":["MiColeccion.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <h1>\n      <div class=\"container\">\n        <h2 v-if=\"!hasPokemons\" class=\"text-center\">\n          Aún no tienes ningún pokemon\n        </h2>\n\n        <v-text-field\n            label=\"Append\"\n            append-icon=\"mdi-database-search\"\n          ></v-text-field>\n\n        <div class=\"d-flex flex-wrap\" v-if=\"hasPokemons\">\n          <v-card\n            v-for=\"(pokemon, index) in paginatedPokemonsOwned\"\n            :key=\"index\"\n            width=\"230px\"\n            class=\"ms-4 mb-4 .d-inline-block\"\n          >\n            <v-img text-center max-width=\"300\" :src=\"pokemon.img\"> </v-img>\n\n            <v-text-field\n              :value=\"pokemon.name.toUpperCase()\"\n              single-line\n              clearable\n              hide-details\n              class=\"mx-auto\"\n            ></v-text-field>\n            <v-card-text class=\"pb-0\"\n              >Tipo: {{ pokemon.type.toUpperCase() }}</v-card-text\n            >\n            <v-card-text class=\"pb-0\">Número: {{ pokemon.id }}</v-card-text>\n\n            <v-card-actions>\n              <router-link tag=\"btn-r\" :to=\"`/pokemon/${pokemon.id}`\">\n                <v-btn color=\"purple\" text> Perfil </v-btn>\n               </router-link>\n              <v-btn color=\"red\" text @click=\"sellPokemonOwned(pokemon.id)\">\n                Vender\n              </v-btn>\n            </v-card-actions>\n          </v-card>\n        </div>\n        <v-pagination v-model=\"page\" :length=\"pages\"></v-pagination>\n      </div>\n    </h1>\n  </div>\n</template>\n\n<script>\nimport store from \"@/store/index.js\";\nimport { mapState } from \"vuex\";\nimport pokemonPage from \"./pokemonPage.vue\";\nexport default {\n  name: \"coleccion\",\n  components: {\n    pokemonPage,\n  },\n\n  computed: {\n    ...mapState([\"pokemonsOwned\", \"coins\"]),\n  },\n\n  data() {\n    return {\n      pokemon: {},\n      hasPokemons: false,\n      itemsPerPage: 14,\n      page: 1,\n    };\n  },\n  methods: {\n    incrementCoins(amount) {\n      store.commit(\"incrementCoins\", amount);\n    },\n\n    sellPokemonOwned(id) {\n      this.$store.dispatch(\"removePokemon\", id);\n      this.incrementCoins(20);\n    },\n  },\n  created: function () {\n    let hasPokemons = JSON.parse(localStorage.getItem(\"pokemonsOwned\"));\n    if (hasPokemons === null) {\n      this.hasPokemons = false;\n    } else {\n      this.hasPokemons = true;\n    }\n  },\n  computed: {\n    ...mapState([\"pokemonsOwned\", \"coins\"]),\n    pages() {\n      return Math.ceil(this.pokemonsOwned.length / this.itemsPerPage);\n    },\n    paginatedPokemonsOwned() {\n      let start = (this.page - 1) * this.itemsPerPage;\n      let end = start + this.itemsPerPage;\n      return this.pokemonsOwned.slice(start, end);\n    },\n  },\n};\n</script>\n\n<style>\n.v-text-field {\n  width: 150px;\n}\na {\n  text-decoration: none;\n}\n\n.v-btn {\n  padding: 0px 8px 0px 8px !important;\n}\n\nbtn-r{\n  margin-bottom: 4.2px!important;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}