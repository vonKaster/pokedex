{"ast":null,"code":"import store from '@/store/index.js';\nimport { mapState, mapActions } from 'vuex';\nexport default {\n  name: \"coleccion\",\n  computed: {\n    ...mapState(['pokemonsOwned', 'coins'])\n  },\n  data() {\n    return {\n      pokemonsOwned: JSON.parse(localStorage.getItem(\"pokemonsOwned\")),\n      pokemon: {},\n      hasPokemons: false,\n      itemsPerPage: 14,\n      page: 1\n    };\n  },\n  methods: {\n    ...mapActions('removePokemon'),\n    sellPokemonOwned(id) {\n      this.pokemonsOwned = this.pokemonsOwned.filter(pokemon => pokemon.id != id);\n      localStorage.setItem(\"pokemonsOwned\", JSON.stringify(this.pokemonsOwned));\n      this.coins += 100;\n      localStorage.setItem(\"coins\", JSON.stringify(this.coins));\n    }\n  },\n  created: function () {\n    let hasPokemons = JSON.parse(localStorage.getItem(\"pokemonsOwned\"));\n    if (hasPokemons === null) {\n      this.hasPokemons = false;\n    } else {\n      this.hasPokemons = true;\n    }\n  },\n  computed: {\n    ...mapState(['pokemonsOwned', 'coins']),\n    pages() {\n      return Math.ceil(this.pokemonsOwned.length / this.itemsPerPage);\n    },\n    paginatedPokemonsOwned() {\n      let start = (this.page - 1) * this.itemsPerPage;\n      let end = start + this.itemsPerPage;\n      return this.pokemonsOwned.slice(start, end);\n    },\n    incrementCoins() {\n      store.commit('incrementCoins');\n    },\n    decrementCoins() {\n      store.commit('decrementCoins');\n    }\n  }\n};","map":{"version":3,"mappings":"AAwCA;AACA;AACA;EACAA;EAEAC;IACA;EACA;EAEAC;IACA;MACAC;MACAC;MACAC;MACAC;MACAC;IACA;EACA;EACAC;IACA;IACAC;MACA,+CACAL,4BACA;MACAM;MACA;MACAA;IACA;EACA;EACAC;IAEA;IACA;MACA;IACA;MACA;IACA;EACA;EACAV;IACA;IACAW;MACA;IACA;IACAC;MACA;MACA;MACA;IACA;IACAC;MACAC;IACA;IACAC;MACAD;IACA;EACA;AACA","names":["name","computed","data","pokemonsOwned","pokemon","hasPokemons","itemsPerPage","page","methods","sellPokemonOwned","localStorage","created","pages","paginatedPokemonsOwned","incrementCoins","store","decrementCoins"],"sourceRoot":"src/components","sources":["MiColeccion.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <h1>\n      <div class=\"container\">\n        <h2 v-if=\"!hasPokemons\" class=\"text-center\">\n          Aún no tienes ningún pokemon\n        </h2>\n\n        <h2>{{ coins }}</h2>\n\n        <div class=\" d-flex flex-wrap\" v-if=\"hasPokemons\">\n          <v-card \n            v-for=\"(pokemon, index) in paginatedPokemonsOwned\"\n            :key=\"index\"\n            width=\"230px\"\n            class=\"ms-4 mb-4 .d-inline-block\"\n\n          >\n            <v-img text-center max-width=\"300\" :src=\"pokemon.img\">\n            </v-img>\n            <v-card-title>{{ pokemon.name.toUpperCase() }}</v-card-title>\n\n            <v-card-text class=\"pb-0\">Número: {{ pokemon.id }}</v-card-text>\n\n            <v-card-actions>\n              <v-btn color=\"red\" text @click=\"sellPokemonOwned(pokemon.id)\"> Vender </v-btn>\n              <v-btn color=\"purple\" text> Evolucionar </v-btn>\n            </v-card-actions>\n          </v-card>\n        </div>\n        <v-pagination\n            v-model=\"page\"\n          :length=\"pages\"\n    ></v-pagination>\n      </div>\n    </h1>\n  </div>\n</template>\n\n<script>\nimport store from '@/store/index.js'\nimport { mapState, mapActions } from 'vuex';\nexport default {\n  name: \"coleccion\",\n\n  computed: {\n    ...mapState(['pokemonsOwned', 'coins'])\n  },\n\n  data() {\n    return {\n      pokemonsOwned: JSON.parse(localStorage.getItem(\"pokemonsOwned\")),\n      pokemon: {},\n      hasPokemons: false,\n      itemsPerPage: 14,\n      page: 1,\n    };\n  },\n  methods: {\n    ...mapActions('removePokemon'),\n    sellPokemonOwned(id) {\n      this.pokemonsOwned = this.pokemonsOwned.filter(\n        (pokemon) => pokemon.id != id\n      );\n      localStorage.setItem(\"pokemonsOwned\", JSON.stringify(this.pokemonsOwned));\n      this.coins += 100;\n      localStorage.setItem(\"coins\", JSON.stringify(this.coins));\n    },\n  },\n  created: function () {\n\n    let hasPokemons = JSON.parse(localStorage.getItem(\"pokemonsOwned\"));\n      if (hasPokemons === null) {\n        this.hasPokemons = false\n      } else {\n        this.hasPokemons = true;\n      }\n  },\n  computed: {\n    ...mapState(['pokemonsOwned', 'coins']),\n    pages() {\n      return Math.ceil(this.pokemonsOwned.length / this.itemsPerPage);\n    },\n    paginatedPokemonsOwned() {\n      let start = (this.page - 1) * this.itemsPerPage;\n      let end = start + this.itemsPerPage;\n      return this.pokemonsOwned.slice(start, end);\n    },\n    incrementCoins() {\n      store.commit('incrementCoins');\n    },\n    decrementCoins() {\n      store.commit('decrementCoins');\n    }\n  }\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}